namespace BitFab.KW1281Test.Blocks
{
    public class SensorValue
    {
        public byte SensorID { get; }

        public byte A { get; }

        public byte B { get; }

        public SensorValue(byte sensorID, byte a, byte b)
        {
            SensorID = sensorID;
            A = a;
            B = b;
        }

        public override string ToString()
        {
            // https://www.blafusel.de/obd/obd2_kw1281.html#7
            return SensorID switch
            {
                1 => $"{0.2 * A * B} rpm",
                2 => $"{(A * 0.002 * B):F1} %",
                3 => $"{(0.002 * A * B):F1} Deg",
                4 => $"{(Math.Abs(B - 127) * 0.01 * A):F1} \u00B0{(B > 127 ? "ATDC" : "BTDC")}", // Degrees
                5 => $"{(A * (B-100) * 0.1):F1} \u00B0C", // Degrees C
                6 => $"{(0.001 * A * B):F1} V",
                7 => $"{0.01 * A * B} km/h",
                8 => $"{(0.1 * A * B):F1}",
                9 => $"{((B - 127) * 0.02 * A):F1} Deg",
                10 => $"{(B == 0 ? "Cold" : "Warm")}",
                11 => $"{(0.0001 * A * (B - 128) + 1):F1}",
                12 => $"{(0.001 * A * B):F1} \u2126", // Ohm
                13 => $"{((B - 127) * 0.001 * A):F1} mm",
                14 => $"{(0.005 * A * B):F1} bar",
                15 => $"{(0.01 * A * B):F1} ms",
                16 => $"{Convert.ToString(A, 2).PadLeft(8, '0')} {Convert.ToString(B, 2).PadLeft(8, '0')}",
                17 => $"\"{(char)A}{(char)B}\"",
                18 => $"{(0.04 * A * B):F1} mbar",
                19 => $"{(A * B * 0.01):F1} l",
                20 => $"{(A * (B - 128) / 128.0):F1} %",
                21 => $"{(0.001 * A * B):F1} V",
                22 => $"{(0.001 * A * B):F1} ms",
                23 => $"{(B / 256.0 * A):F1} %",
                24 => $"{(0.001 * A * B):F1} A",
                25 => $"{((B * 1.421) + (A / 182.0)):F1} g/s",
                26 => $"{B - A} C",
                27 => $"{(Math.Abs(B - 128) * 0.01 * A):F1} \u00B0{(B < 128 ? "ATDC" : "BTDC")}", // Degrees
                28 => $"{B - A}",
                29 => $"{(B<A ? "Map 1" : "Map 2")}",
                30 => $"{(B / 12.0 * A):F1} Deg k/w",
                31 => $"{(B / 2560.0 * A):F1}",
                32 => $"{(B>128 ? B-256 : B)}",
                33 => $"{(A == 0 ? 100.0*B : 100.0*B/A):F1} %",
                34 => $"{((B - 128) * 0.01 * A):F1} kW",
                35 => $"{(0.01 * A * B):F1} l/h",
                36 => $"{A * 2560 + B * 10} km",
                // 37 => ???,
                38 => $"{((B - 128) * 0.001 * A):F1} Deg k/w",
                39 => $"{(B/256.0*A):F1} mg/h",
                40 => $"{(B * 0.1 + (25.5 * A) - 400):F1} A",
                41 => $"{(B + A * 255)} Ah",
                42 => $"{(B * 0.1 + (25.5 * A) - 400):F1} Kw",
                43 => $"{(B * 0.1 + (25.5 * A)):F1} V",
                44 => $"{A:D2}:{B:D2}",
                45 => $"{(0.1 * A * B / 100.0):F1}",
                46 => $"{((A * B - 3200) * 0.0027):F1} Deg k/w",
                47 => $"{((B - 128) * A)} ms",
                48 => $"{B + A * 255}",
                49 => $"{(B / 4.0 * A * 0.1):F1} mg/h",
                50 => $"{(A == 0 ? (B - 128) / 0.01 : (B - 128) / (0.01 * A)):F1} mbar",
                51 => $"{(((B - 128) / 255.0) * A):F1} mg/h",
                52 => $"{(B * 0.02 * A - A):F1} Nm",
                53 => $"{((B - 128) * 1.4222 + 0.006 * A):F1} g/s",
                54 => $"{A * 256 + B}",
                55 => $"{(A * B / 200.0):F1} s",
                56 => $"{A * 256 + B} WSC",
                57 => $"{A * 256 + B + 65536} WSC",
                58 => $"{(B > 128 ? 1.0225 * (256 - B) : 1.0225 * B):F1} /s",
                59 => $"{((A * 256 + B) / 32768.0):F1}",
                60 => $"{((A * 256 + B) * 0.01):F1} sec",
                61 => $"{(A==0 ? (B - 128) : (B - 128) / A):F1}",
                62 => $"{(0.256 * A * B):F1} S",
                63 => $"\"{(char)A}{(char)B}\"?",
                64 => $"{A+B} \u2126", // Ohm
                65 => $"{(0.01 * A * (B - 127)):F1} mm",
                66 => $"{((A * B) / 511.12):F1} V",
                67 => $"{((640 * A) + B * 2.5):F1} Deg",
                68 => $"{((256 * A + B) / 7.365):F1} deg/s",
                69 => $"{((256 * A + B) * 0.3254):F1} Bar",
                70 => $"{((256 * A + B) * 0.192):F1} m/s\u00B2", // squared
                _ => $"({SensorID} {A} {B})",
            };
        }
    }
}
